{"version":3,"sources":["movie.js"],"names":[],"mappings":"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","file":"movie-compiled.js","sourcesContent":["\r\n'use strict'\r\n\r\nvar mongoose = require('mongoose')\r\nvar Movie = mongoose.model('Movie')\r\nvar Category = mongoose.model('Category')\r\nvar Comment = mongoose.model('Comment')\r\nvar _ = require('lodash')\r\nvar fs = require('fs')\r\nvar path = require('path')\r\n\r\n// detail page\r\nexports.detail = function *(next) {\r\n\r\n  var id = this.params.id\r\n\r\n  if(id == 'undefined') return\r\n\r\n  yield p.query('update movie set pv = pv +1 where id= ?',[id])\r\n\r\n  var movie = yield p.query('select * from movie where id=? limit 1',[id])\r\n\r\n  var sqlS = 'select t1.id,t1.parent_id,t1.movie_id,t1.user_id,t1.createAt,t1.content,t2.`name` from comments as t1,users as t2 where t2.id = t1.user_id and t1.movie_id=?'\r\n\r\n  var comments = yield p.query(sqlS,[id])\r\n\r\n/*  var comments = yield Comment\r\n      .find({movie: id})\r\n      .populate('from', 'name')\r\n      .populate('reply.from reply.to', 'name')\r\n      .exec()*/\r\n  yield this.render('pages/detail', {\r\n    title: 'imooc 详情页',\r\n    movie: movie[0],\r\n    comments: comments\r\n  })\r\n}\r\n\r\n// admin new page\r\nexports.new = function *(next) {\r\n  var categories = yield Category.find({}).exec()\r\n  yield this.render('pages/admin', {\r\n    title: 'imooc 后台录入页',\r\n    categories: categories,\r\n    movie: {}\r\n  })\r\n}\r\n\r\n// admin update page\r\nexports.update = function *(next) {\r\n  var id = this.params.id\r\n\r\n  if (id) {\r\n    var movie = yield Movie.findOne({_id: id}).exec()\r\n\r\n    var categories = yield Category.find({}).exec()\r\n    yield this.render('pages/admin', {\r\n      title: 'imooc 后台更新页',\r\n      movie: movie,\r\n      categories: categories\r\n    })\r\n  }\r\n}\r\n\r\nvar util = require('../../libs/util')\r\n\r\n// admin poster\r\nexports.savePoster = function *(next) {\r\n  var posterData = this.request.body.files.uploadPoster\r\n  var filePath = posterData.path\r\n  var name = posterData.name\r\n  if (name) {\r\n    var data = yield util.readFileAsync(filePath)\r\n    var timestamp = Date.now()\r\n    var type = posterData.type.split('/')[1]\r\n    var poster = timestamp + '.' + type\r\n    var newPath = path.join(__dirname, '../../', '/public/upload/' + poster)\r\n    yield util.writeFileAsync(newPath,data)\r\n    this.poster = poster\r\n  }\r\n    yield next\r\n}\r\n\r\n// admin post movie\r\nexports.save = function *(next) {\r\n    console.log('save');\r\n    var movieObj = this.request.body.fields || {}\r\n    var _movie\r\n\r\n    if (this.poster) {\r\n        movieObj.poster = this.poster\r\n    }\r\n\r\n    if (movieObj._id) {\r\n        var movie = yield Movie.findOne({_id: movieObj._id}).exec()\r\n\r\n        _movie = _.extend(movie, movieObj)\r\n        yield _movie.save()\r\n\r\n        this.redirect('/movie/' + movie._id)\r\n    }\r\n    else {\r\n        _movie = new Movie(movieObj)\r\n\r\n        var categoryId = movieObj.category\r\n        var categoryName = movieObj.categoryName\r\n\r\n        var movie = yield _movie.save()\r\n\r\n        if (categoryId) {\r\n            let category = yield Category.findOne({_id: categoryId}).exec()\r\n\r\n            category.movies.push(movie._id)\r\n            yield category.save()\r\n\r\n            this.redirect('/movie/' + movie._id)\r\n        }\r\n        else if (categoryName) {\r\n            let category = new Category({\r\n                name: categoryName,\r\n                movies: [movie._id]\r\n            })\r\n\r\n            yield category.save()\r\n            movie.category = category._id\r\n            yield movie.save()\r\n\r\n            this.redirect('/movie/' + movie._id)\r\n        }\r\n    }\r\n}\r\n// list page\r\nexports.list = function *(next) {\r\n  var movies = yield Movie.find({})\r\n    .populate('category', 'name')\r\n    .exec()\r\n\r\n   yield this.render('pages/list', {\r\n    title: 'imooc 列表页',\r\n    movies: movies\r\n  })\r\n}\r\n\r\n// list page\r\nexports.del = function *(next) {\r\n  var id = this.query.id\r\n\r\n  if (id) {\r\n    try{\r\n      yield Movie.remove({_id: id}).exec()\r\n      this.body = {success: 1}\r\n    }catch(err){\r\n      //res.json({success: 0})\r\n      this.body = {success: 0}\r\n    }\r\n  }\r\n}"]}