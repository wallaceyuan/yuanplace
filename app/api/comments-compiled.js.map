{"version":3,"sources":["comments.js"],"names":[],"mappings":";;;AAGA,YAAY,CAAA;;AACZ,IAAI,QAAQ,GAAG,OAAO,CAAC,UAAU,CAAC,CAAA;AAClC,IAAI,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,CAAA;AACnC,IAAI,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAC,UAAU,CAAC,CAAA;AACzC,IAAI,WAAW,GAAG,OAAO,CAAC,aAAa,CAAC,CAAA;AACxC,IAAI,OAAO,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AAClC,IAAI,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;AACpD,IAAI,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC1B,IAAI,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;AACvB,IAAI,IAAI,GAAG,OAAO,CAAC,mBAAmB,CAAC,CAAA;AACvC,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAA;AACpB,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC;;;AAAA,AAGd,OAAO,CAAC,IAAI,GAAG,WAAW,IAAI,EAAE;AAC5B,QAAI,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAA;AACxC,WAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAA;;AAErB,QAAI,GAAG,GAAG,QAAQ,CAAC,GAAG,GAAC,QAAQ,CAAC,GAAG,GAAC,CAAC,CAAA;;AAErC,QAAI,GAAG,GAAG,CAAC,GAAG,EAAC,QAAQ,CAAC,KAAK,EAAC,QAAQ,CAAC,IAAI,EAAC,IAAI,IAAI,EAAE,EAAC,IAAI,IAAI,EAAE,EAAC,QAAQ,CAAC,OAAO,EAAC,EAAE,CAAC,CAAA;;AAEtF,QAAI,GAAG,GAAG,MAAM,CAAC,CAAC,KAAK,CAAC,wGAAwG,EAAC,GAAG,CAAC,CAAA;;AAErI,WAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;;AAEhB,QAAI,CAAC,IAAI,GAAG,EAAE,OAAO,EAAE,CAAC,EAAE;;;;;;;;;;;;;;;;;;;;;;AAAA,CAwB7B,CAAA","file":"comments-compiled.js","sourcesContent":["/**\r\n * Created by yuan on 2016/9/19.\r\n */\r\n'use strict'\r\nvar mongoose = require('mongoose')\r\nvar Movie = mongoose.model('Movie')\r\nvar Category = mongoose.model('Category')\r\nvar koa_request = require('koa-request')\r\nvar Promise = require('bluebird');\r\nvar request = Promise.promisify(require('request'));\r\nvar _ = require('lodash');\r\nvar co = require('co');\r\nvar conf = require('../../config/conf')\r\nvar pool = conf.pool\r\nvar p = conf.p\r\n\r\n// comment\r\nexports.save = function *(next) {\r\n    var _comment = this.request.body.comment\r\n    console.log(_comment)\r\n\r\n    var cid = _comment.cid?_comment.cid:0\r\n\r\n    var c_v = [cid,_comment.movie,_comment.from,new Date(),new Date(),_comment.content,'']\r\n\r\n    var res = yield p.query('insert into comments(parent_id,movie_id,user_id,createAt,updateAt,content,thread) value(?,?,?,?,?,?,?)',c_v)\r\n\r\n    console.log(res)\r\n\r\n    this.body = { success :1 }\r\n    /*  var movieId = _comment.movie\r\n\r\n     if (_comment.cid) {\r\n\r\n     let comment = yield Comment.findOne({_id: _comment.cid}).exec()\r\n     var reply = {\r\n     from: _comment.from,\r\n     to: _comment.tid,\r\n     content: _comment.content\r\n     }\r\n     comment.reply.push(reply)\r\n     yield comment.save()\r\n     this.body = { success :1 }\r\n     }\r\n     else {\r\n     var comment = new Comment({\r\n     movie:_comment.movie,\r\n     from:_comment.from,\r\n     content:_comment.content\r\n     })\r\n     yield comment.save()\r\n     this.body = { success :1 }\r\n     }*/\r\n}"]}