{"version":3,"sources":["test.js"],"names":[],"mappings":";;;AAGA,IAAI,IAAI,GAAG,OAAO,CAAC,mBAAmB,CAAC,CAAA;AACvC,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAA;AACpB,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,CAAA;AACd,IAAI,OAAO,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AAClC,IAAI,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;AACpD,IAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAA;AAC9B,IAAI,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC1B,IAAI,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAC,AAoLvB,EAAE,CAAC,aAAY;AACX,QAAI,EAAE,GAAG,MAAM,CAAC,CAAC,KAAK,CAAC,sDAAsD,EAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;AACrF,WAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAA;CAClB,CAAC,CAAA","file":"test-compiled.js","sourcesContent":["/**\r\n * Created by Yuan on 2016/9/7.\r\n */\r\nvar conf = require('../../config/conf')\r\nvar pool = conf.pool\r\nvar p = conf.p\r\nvar Promise = require('bluebird');\r\nvar request = Promise.promisify(require('request'));\r\nvar moment = require('moment')\r\nvar _ = require('lodash');\r\nvar co = require('co');\r\n\r\n/*\r\npool.query('SELECT * FROM category group by name,movie',function(err,row){\r\n    console.log(err,row)\r\n})\r\n*/\r\n/*var total = [0, 1, 2, 3].reduce(function(a, b) {\r\n    console.log(a,b)\r\n    return a + b;\r\n}, 0);\r\nconsole.log(total)*/\r\n\r\n/*\r\npool.query('SELECT * FROM category LEFT JOIN movie on category.movieId = movie.id group by name,movieId',function(err,rows){\r\n    var cate = ''\r\n    var ccs = new Array()\r\n    rows.map(function(row) {\r\n        var name = row.name\r\n        var reg = eval('/'+name +'/g');\r\n        console.log(cate,name)\r\n        if (cate.match(reg)) {\r\n            console.log('match')\r\n            ccs.map(function(cc){\r\n                if(cc.name == row.name){\r\n                    cc.movies.push(row)\r\n                }\r\n            })\r\n        }else{\r\n            console.log('not match')\r\n            cate += row.name\r\n            var data = { id:row.id ,\r\n                name: row.name,\r\n                meta: { updateAt: row.updateAt,\r\n                        createAt: row.createAt\r\n                    },\r\n                movies: [{row}]\r\n            }\r\n            ccs.push(data)\r\n        }\r\n    })\r\n    console.log(ccs)\r\n})\r\n*/\r\n\r\n/*var aa = [1,2,3,4,5]\r\nvar ad = aa.find(1)\r\nconsole.log(ad)*/\r\n/*var q = '三人行'\r\npool.query('SELECT * FROM movie where title LIKE ?',[ q + '%'],function(err,row,fields){\r\n    if(err){\r\n        console.log(err)\r\n    }else{\r\n        console.log(row)\r\n    }\r\n})*/\r\n\r\n/*pool.query('insert into movie(director,title,doubanId,poster,year,genres) values(?,?,?,?,?,?)',[ 1,1,1,'https://img3.doubanio.com/view/movie_poster_cover/lpst/public/p1910908765.jpg',111,12], function (err, row) {\r\n    if(err){\r\n        console.log(err)\r\n    }else{\r\n        console.log(row)\r\n    }\r\n})*/\r\n\r\n\r\n/*var aa = moment().format(\"YYYY-MM-DD HH:MM:SS\");\r\nconsole.log(aa)\r\npool.query('insert into category(name,movieId,createAt,updateAt) value(?,?,?,?)',[2,2,new Date(),new Date()],function(err,res){\r\n    console.log(err)\r\n    console.log(res)\r\n})\r\npool.query('SELECT id FROM category where movieId = ? limit 1',[82],function(err,row,fields){\r\n    if(err){\r\n        console.log(err)\r\n    }else{\r\n        console.log(row)\r\n    }\r\n})*/\r\n\r\n/*pool.query('update category set updateAt = ? where movieId = ?',[new Date(),123],function(err,res){\r\n    console.log(err,res)\r\n})*/\r\n\r\n/*\r\n\r\nvar genres=[\r\n    \"剧情\",\r\n    \"历史\",\r\n    \"战争\"\r\n]\r\n\r\nvar aa = genres.join(',')\r\nconsole.log(aa)*/\r\n\r\n/*var movie = {\r\n    director: 12,\r\n    title: 12,\r\n    doubanId: 1111,\r\n    poster: 111111111,\r\n    year: 1234,\r\n    genres:'剧情,言情',\r\n    id:123\r\n}\r\n\r\nvar cat_id = 142,\r\n    summary = '政客Peter（克里斯·诺斯 Chris Noth 饰）因性丑闻和政治丑闻被捕入狱后，妻子Alicia （朱丽安娜· 玛格丽丝 Julianna Margulies 饰）只能结束“家庭主妇”的生活，独支撑家庭的重任。'\r\npool.query('update movie set category = ? , coutry = ? ,summary = ? where id = ?',[cat_id,'美国',summary,12],function(err,row){\r\n    if(err){\r\n        console.log(err)\r\n    }else{\r\n        console.log(row)\r\n    }\r\n})*/\r\n\r\n\r\n\r\n\r\n\r\n/*updateMovies(movie)\r\n\r\nfunction updateMovies(movie){\r\n    var options = {\r\n        url:'https://api.douban.com/v2/movie/subject/24843210',\r\n        json:true\r\n    }\r\n\r\n    var db = function *(genre){\r\n        var cate = p.query('SELECT id FROM category where movieId = ? limit 1',[movie.id])\r\n        if(cate && cate.length > 0){\r\n            yield p.query('update category set updateAt = ? where movieId = ?',[new Date(),movie.id])\r\n        }else {\r\n            var cat_id = yield p.query('insert into category(name,movieId,createAt,updateAt) value(?,?,?,?)',[genre,movie.id,new Date(),new Date()])\r\n            yield p.query('update movie set category = ? and coutry = ? and summary = ? where id = ?',[cat_id,data.countries[0],data.summary,movie.id])\r\n        }\r\n    }\r\n    request(options).then(function(response){\r\n        var data = response.body;\r\n        if(data.code == 5000) return\r\n        /!*        _.extend(movie,{\r\n         coutry:data.countries[0],\r\n         summary:data.summary\r\n         })*!/\r\n        var genres = data.genres\r\n        if(genres && genres.length > 0){\r\n            var cateArray = []\r\n            genres.forEach(function(genre){\r\n                cateArray.push(function *(){\r\n                    yield db(genre)\r\n                })\r\n            });\r\n            co(function *(){\r\n                yield cateArray\r\n            })\r\n        }else{\r\n            co(function *(){\r\n                yield db(genres)\r\n            })\r\n            //movie.save()\r\n        }\r\n    });\r\n}*/\r\n\r\n/*pool.query('update movie set pv = pv +1 where id=1 ',function(err, row){\r\n    console.log(err,row)\r\n})*/\r\n\r\n/*\r\npool.query('select * from movie where id=1 limit 1',function(err, row){\r\n    console.log(err,row)\r\n})\r\n*/\r\n\r\n/*pool.query('select * from users where name=1 limit 1',function(err, row){\r\n    console.log(err,row)\r\n})*/\r\n\r\n/*pool.query('select id from users where name = ? limit 1',[1],function(err,res){\r\n    console.log(err,res)\r\n})*/\r\nco(function *(){\r\n    var aa = yield p.query('select name,password from users where id = ? limit 1',[1])[0]\r\n    console.log(aa)\r\n})\r\n"]}